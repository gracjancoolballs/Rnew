do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v82=0;local v83;while true do if (v82==0) then v83=v2(v0(v30,16));if v19 then local v101=v5(v83,v19);v19=nil;return v101;else return v83;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v84=(v31/(2^(v32-(2 -1))))%((5 -3)^(((v33-(1 -0)) -(v32-(2 -1))) + (620 -(555 + 64)))) ;return v84-(v84%(932 -(857 + (951 -(282 + 595))))) ;else local v85=568 -(367 + 201) ;local v86;while true do if (v85==0) then v86=(929 -(214 + 713))^(v32-(1 + 0)) ;return (((v31%(v86 + v86))>=v86) and (1 + 0)) or 0 ;end end end end local function v21()local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22()local v35,v36=v1(v16,v18,v18 + (1639 -(1523 + 114)) );v18=v18 + 2 + 0 ;return (v36 * (364 -108)) + v35 ;end local function v23()local v37=1065 -(68 + 997) ;local v38;local v39;local v40;local v41;while true do if (v37==1) then return (v41 * (16778486 -(226 + 1044))) + (v40 * (285370 -(220791 -(892 + 65)))) + (v39 * 256) + v38 ;end if (v37==(117 -(32 + 85))) then v38,v39,v40,v41=v1(v16,v18,v18 + 3 + 0 );v18=v18 + 1 + 3 ;v37=1;end end end local function v24()local v42=0 -0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==((3 -2) -0)) then v45=1 -0 ;v46=(v20(v44,351 -(87 + 263) ,200 -(67 + 113) ) * ((2 + 0)^(78 -46))) + v43 ;v42=2 + 0 ;end if (v42==(11 -8)) then if (v47==((1394 -(416 + 26)) -(802 + (478 -328)))) then if (v46==(0 -0)) then return v48 * (0 -0) ;else v47=1 + 0 + 0 ;v45=997 -((1618 -703) + 82) ;end elseif (v47==(5796 -3749)) then return ((v46==(0 + 0)) and (v48 * ((1 -(438 -(145 + 293)))/0))) or (v48 * NaN) ;end return v8(v48,v47-((2640 -(44 + 386)) -(1069 + 118)) ) * (v45 + (v46/(2^(117 -65)))) ;end if (v42==0) then v43=v23();v44=v23();v42=1;end if (v42==(3 -1)) then v47=v20(v44,4 + 17 ,54 -23 );v48=((v20(v44,32 + 0 )==(792 -(368 + 423))) and  -(3 -2)) or 1 ;v42=21 -(10 + 8) ;end end end local function v25(v49)local v50;if  not v49 then local v87=(5276 -3790) -(998 + (1347 -(814 + 45))) ;while true do if (v87==((2803 -1665) -(116 + 1022))) then v49=v23();if (v49==(0 + 0)) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -(1 + 0) );v18=v18 + v49 ;local v51={};for v66=3 -2 , #v50 do v51[v66]=v2(v1(v3(v50,v66,v66)));end return v6(v51);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v52=0;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v52~=(1944 -(1008 + 935))) then else v55=nil;v56=nil;v52=2;end if (v52~=(158 -(142 + 14))) then else local v90=1793 -(1563 + 230) ;local v91;while true do if (v90~=(285 -(134 + 151))) then else v91=1665 -(970 + 695) ;while true do if (v91==0) then v57=nil;v58=nil;v91=1 -0 ;end if (v91~=(1991 -(582 + 1408))) then else v52=10 -7 ;break;end end break;end end end if (v52~=3) then else v59=nil;while true do local v93=0 -0 ;local v94;while true do if (v93~=0) then else v94=0 -0 ;while true do if (v94~=(1824 -(1195 + 629))) then else local v102=0;local v103;while true do if (v102==0) then v103=0 -0 ;while true do if (v103~=(241 -(187 + 54))) then else local v131=780 -(162 + 618) ;while true do if (1~=v131) then else v103=1;break;end if (v131==(0 + 0)) then if (v53==1) then local v273=0;local v274;while true do if ((0 + 0)==v273) then v274=0;while true do if (v274~=1) then else v59={};v53=2;break;end if (0~=v274) then else local v302=0;while true do if (v302==1) then v274=1 -0 ;break;end if ((0 -0)==v302) then v57={v54,v55,nil,v56};v58=v23();v302=1;end end end end break;end end end if (v53==(1639 -(1373 + 263))) then local v275=0;local v276;while true do if (v275~=0) then else v276=0;while true do if (v276==0) then for v303=1001 -(451 + 549) ,v23() do v55[v303-(1 + 0) ]=v28();end return v57;end end break;end end end v131=1 -0 ;end end end if (v103==(1 -0)) then v94=1;break;end end break;end end end if (v94==(1385 -(746 + 638))) then if ((0 + 0)~=v53) then else local v104=0 -0 ;while true do if (v104==0) then local v107=341 -(218 + 123) ;while true do if (v107==(1581 -(1535 + 46))) then v54={};v55={};v107=1;end if (v107==(1 + 0)) then v104=1 + 0 ;break;end end end if (v104==1) then v56={};v53=561 -(306 + 254) ;break;end end end if (v53==2) then local v105=0 + 0 ;local v106;while true do if (v105==0) then v106=0 -0 ;while true do if (v106~=(1467 -(899 + 568))) then else local v211=0;while true do if (v211~=0) then else local v277=0 + 0 ;while true do if (v277~=(0 -0)) then else for v297=1,v58 do local v298=603 -(268 + 335) ;local v299;local v300;local v301;while true do if (v298==(290 -(60 + 230))) then v299=572 -(426 + 146) ;v300=nil;v298=1;end if (v298~=(1 + 0)) then else v301=nil;while true do if ((1456 -(282 + 1174))~=v299) then else local v306=0;while true do if (v306==0) then local v313=0;while true do if (v313==(812 -(569 + 242))) then v306=2 -1 ;break;end if (v313==(0 + 0)) then v300=v21();v301=nil;v313=1;end end end if (v306~=(1025 -(706 + 318))) then else v299=1252 -(721 + 530) ;break;end end end if (v299~=1) then else if (v300==(1272 -(945 + 326))) then v301=v21()~=0 ;elseif (v300==2) then v301=v24();elseif (v300==3) then v301=v25();end v59[v297]=v301;break;end end break;end end end v57[3]=v21();v277=1;end if (v277~=(2 -1)) then else v211=1 + 0 ;break;end end end if (v211==(701 -(271 + 429))) then v106=1;break;end end end if (v106==(1 + 0)) then for v228=1501 -(1408 + 92) ,v23() do local v229=1086 -(461 + 625) ;local v230;while true do if (v229~=(1288 -(993 + 295))) then else v230=v21();if (v20(v230,1,1 + 0 )==0) then local v288=0;local v289;local v290;local v291;local v292;local v293;while true do if (v288~=2) then else v293=nil;while true do if (v289~=(1171 -(418 + 753))) then else v290=0 + 0 ;v291=nil;v289=1 + 0 ;end if (v289==(1 + 0)) then local v305=0 + 0 ;while true do if (1~=v305) then else v289=531 -(406 + 123) ;break;end if (v305~=0) then else v292=nil;v293=nil;v305=1770 -(1749 + 20) ;end end end if (v289==2) then while true do if (v290==(1 + 1)) then local v308=1322 -(1249 + 73) ;local v309;while true do if (v308~=(0 + 0)) then else v309=0;while true do if (v309==1) then v290=1148 -(466 + 679) ;break;end if ((0 -0)==v309) then if (v20(v292,1,1)==(2 -1)) then v293[2]=v59[v293[1902 -(106 + 1794) ]];end if (v20(v292,1 + 1 ,1 + 1 )~=1) then else v293[8 -5 ]=v59[v293[7 -4 ]];end v309=115 -(4 + 110) ;end end break;end end end if (v290~=(584 -(57 + 527))) then else local v310=0;while true do if (v310==0) then v291=v20(v230,1429 -(41 + 1386) ,3);v292=v20(v230,107 -(17 + 86) ,5 + 1 );v310=1 -0 ;end if (v310==(2 -1)) then v290=167 -(122 + 44) ;break;end end end if (v290~=3) then else if (v20(v292,3,3)==(1 -0)) then v293[4]=v59[v293[4]];end v54[v228]=v293;break;end if ((3 -2)~=v290) then else local v312=0;while true do if (v312==0) then v293={v22(),v22(),nil,nil};if (v291==(0 + 0)) then local v316=0 -0 ;local v317;while true do if (v316==0) then v317=65 -(30 + 35) ;while true do if (v317==0) then v293[3 + 0 ]=v22();v293[4]=v22();break;end end break;end end elseif (v291==1) then v293[1260 -(1043 + 214) ]=v23();elseif (v291==2) then v293[11 -8 ]=v23() -(2^16) ;elseif (v291==(1215 -(323 + 889))) then local v326=0 -0 ;while true do if ((580 -(361 + 219))~=v326) then else v293[323 -(53 + 267) ]=v23() -(2^16) ;v293[4]=v22();break;end end end v312=1;end if (v312==1) then v290=2;break;end end end end break;end end break;end if (v288~=(1 + 0)) then else v291=nil;v292=nil;v288=415 -(15 + 398) ;end if (v288==0) then v289=0;v290=nil;v288=1;end end end break;end end end v53=985 -(18 + 964) ;break;end end break;end end end break;end end break;end end end break;end if (v52==(0 -0)) then local v92=0;while true do if (v92==1) then v52=1 + 0 ;break;end if (v92~=(0 + 0)) then else v53=0;v54=nil;v92=1;end end end end end local function v29(v60,v61,v62)local v63=v60[1];local v64=v60[2];local v65=v60[3];return function(...)local v68=v63;local v69=v64;local v70=v65;local v71=v27;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v88=0,v76 do if (v88>=v70) then v74[v88-v70 ]=v75[v88 + 1 ];else v78[v88]=v75[v88 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do local v89=0;while true do if (v89==0) then v80=v68[v72];v81=v80[1];v89=1;end if (v89==1) then if (v81<=26) then if (v81<=12) then if (v81<=5) then if (v81<=2) then if (v81<=0) then local v108=0;local v109;local v110;local v111;while true do if (v108==1) then v111={};v110=v10({},{__index=function(v231,v232)local v233=v111[v232];return v233[1][v233[2]];end,__newindex=function(v234,v235,v236)local v237=v111[v235];v237[1][v237[2]]=v236;end});v108=2;end if (0==v108) then v109=v69[v80[3]];v110=nil;v108=1;end if (v108==2) then for v239=1,v80[4] do v72=v72 + 1 ;local v240=v68[v72];if (v240[1]==15) then v111[v239-1 ]={v78,v240[3]};else v111[v239-1 ]={v61,v240[3]};end v77[ #v77 + 1 ]=v111;end v78[v80[2]]=v29(v109,v110,v62);break;end end elseif (v81>1) then v78[v80[2]]();else for v214=v80[2],v80[3] do v78[v214]=nil;end end elseif (v81<=3) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>4) then v78[v80[2]]=v80[3];else local v146=0;local v147;local v148;while true do if (v146==0) then v147=v80[3];v148=v78[v147];v146=1;end if (v146==1) then for v280=v147 + 1 ,v80[4] do v148=v148   .. v78[v280] ;end v78[v80[2]]=v148;break;end end end elseif (v81<=8) then if (v81<=6) then local v112=v69[v80[3]];local v113;local v114={};v113=v10({},{__index=function(v132,v133)local v134=v114[v133];return v134[1][v134[2]];end,__newindex=function(v135,v136,v137)local v138=v114[v136];v138[1][v138[2]]=v137;end});for v140=1,v80[4] do v72=v72 + 1 ;local v141=v68[v72];if (v141[1]==15) then v114[v140-1 ]={v78,v141[3]};else v114[v140-1 ]={v61,v141[3]};end v77[ #v77 + 1 ]=v114;end v78[v80[2]]=v29(v112,v113,v62);elseif (v81>7) then v78[v80[2]]=v61[v80[3]];else v72=v80[3];end elseif (v81<=10) then if (v81>9) then local v152=v80[2];v78[v152]=v78[v152](v13(v78,v152 + 1 ,v80[3]));elseif (v78[v80[2]]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>11) then local v154=v80[2];v78[v154](v13(v78,v154 + 1 ,v80[3]));elseif (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=19) then if (v81<=15) then if (v81<=13) then v78[v80[2]]=v29(v69[v80[3]],nil,v62);elseif (v81==14) then local v155=0;local v156;while true do if (v155==0) then v156=v80[2];v78[v156]=v78[v156](v13(v78,v156 + 1 ,v73));break;end end else v78[v80[2]]=v78[v80[3]];end elseif (v81<=17) then if (v81>16) then local v159=v80[3];local v160=v78[v159];for v218=v159 + 1 ,v80[4] do v160=v160   .. v78[v218] ;end v78[v80[2]]=v160;else v78[v80[2]]={};end elseif (v81==18) then local v163=0;local v164;local v165;while true do if (v163==1) then v78[v164 + 1 ]=v165;v78[v164]=v165[v80[4]];break;end if (v163==0) then v164=v80[2];v165=v78[v80[3]];v163=1;end end elseif (v78[v80[2]]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=22) then if (v81<=20) then local v117=0;local v118;local v119;local v120;local v121;while true do if (v117==2) then for v245=v118,v73 do v121=v121 + 1 ;v78[v245]=v119[v121];end break;end if (v117==0) then v118=v80[2];v119,v120=v71(v78[v118](v13(v78,v118 + 1 ,v80[3])));v117=1;end if (v117==1) then v73=(v120 + v118) -1 ;v121=0;v117=2;end end elseif (v81>21) then local v166=v80[2];local v167=v78[v80[3]];v78[v166 + 1 ]=v167;v78[v166]=v167[v80[4]];else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81<=24) then if (v81==23) then local v173=v80[2];local v174={};for v220=1, #v77 do local v221=v77[v220];for v248=0, #v221 do local v249=v221[v248];local v250=v249[1];local v251=v249[2];if ((v250==v78) and (v251>=v173)) then local v281=0;while true do if (v281==0) then v174[v251]=v250[v251];v249[1]=v174;break;end end end end end else v62[v80[3]]=v78[v80[2]];end elseif (v81==25) then v78[v80[2]]={};else local v178=v80[2];v78[v178]=v78[v178](v13(v78,v178 + 1 ,v73));end elseif (v81<=39) then if (v81<=32) then if (v81<=29) then if (v81<=27) then v78[v80[2]][v80[3]]=v78[v80[4]];elseif (v81==28) then local v180=v80[2];local v181={};for v222=1, #v77 do local v223=v77[v222];for v252=0, #v223 do local v253=v223[v252];local v254=v253[1];local v255=v253[2];if ((v254==v78) and (v255>=v180)) then v181[v255]=v254[v255];v253[1]=v181;end end end else v78[v80[2]][v80[3]]=v80[4];end elseif (v81<=30) then v78[v80[2]][v80[3]]=v80[4];elseif (v81>31) then local v184=0;local v185;while true do if (v184==0) then v185=v80[2];v78[v185]=v78[v185]();break;end end else v72=v80[3];end elseif (v81<=35) then if (v81<=33) then v78[v80[2]]=v61[v80[3]];elseif (v81>34) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]=v62[v80[3]];end elseif (v81<=37) then if (v81>36) then v78[v80[2]]=v78[v80[3]][v80[4]];else local v191=0;local v192;while true do if (v191==0) then v192=v80[2];v78[v192]=v78[v192]();break;end end end elseif (v81>38) then for v224=v80[2],v80[3] do v78[v224]=nil;end else v78[v80[2]]=v62[v80[3]];end elseif (v81<=46) then if (v81<=42) then if (v81<=40) then v78[v80[2]]=v78[v80[3]];elseif (v81==41) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end else v62[v80[3]]=v78[v80[2]];end elseif (v81<=44) then if (v81==43) then v78[v80[2]]=v78[v80[3]][v80[4]];else local v199=v80[2];v78[v199]=v78[v199](v13(v78,v199 + 1 ,v80[3]));end elseif (v81==45) then do return;end else local v201=v80[2];local v202,v203=v71(v78[v201](v13(v78,v201 + 1 ,v80[3])));v73=(v203 + v201) -1 ;local v204=0;for v226=v201,v73 do local v227=0;while true do if (v227==0) then v204=v204 + 1 ;v78[v226]=v202[v204];break;end end end end elseif (v81<=49) then if (v81<=47) then v78[v80[2]]=v29(v69[v80[3]],nil,v62);elseif (v81>48) then do return;end else local v205=0;local v206;while true do if (v205==0) then v206=v80[2];v78[v206](v78[v206 + 1 ]);break;end end end elseif (v81<=51) then if (v81>50) then local v207=v80[2];v78[v207](v13(v78,v207 + 1 ,v80[3]));else v78[v80[2]]=v80[3];end elseif (v81>52) then v78[v80[2]]();else local v210=v80[2];v78[v210](v78[v210 + 1 ]);end v72=v72 + 1 ;break;end end end end;end return v29(v28(),{},v17)(...);end vv9(),...);end
